if (! this.sh_languages) {
  this.sh_languages = {};
}
sh_languages['r-syntax'] = [
  [
    [
      /#/g,
      'sh_comment',
      1
    ],
    [
      /(\bstruct)([ \t]+)([A-Za-z0-9_]+)/g,
      ['sh_keyword', 'sh_normal', 'sh_classname'],
      -1
    ],
    [
      /\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,
      'sh_number',
      -1
    ],
    [
      /"/g,
      'sh_string',
      2
    ],
    [
      /'/g,
      'sh_string',
      3
    ],
    [
      /\b(?:NA|NULL|NaN|Inf|-Inf|TRUE|FALSE|for|in|while|if|else|object\.size|as\.numeric|ls|rm|options|q\(|c\(|seq|rep|append|unlist|rev|unique|sum|mean|max|min|range|diff|cumsum|cumprod|identical|all\.equal|match|is\.null|is\.na|is\.infinite|is\.nan|any|all|as\.character|as\.logical|as\.numeric|as\.integer|as\.Date|floor|ceiling|round|signif|attributes|attr|names|rownames|colnames|dimnames|summary|length|dim|nrow|ncol|head|tail|class|str|subset|getwd|setwd|library|search|hist|plot)\b/g,
      'sh_keyword',
      -1
    ],
    [
      /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\||%%|%\/%|%in%|<-/g,
      'sh_symbol',
      -1
    ],
    [
      /\{|\}/g,
      'sh_cbracket',
      -1
    ],
    [
      /(?:[A-Za-z]|_)[A-Za-z0-9_]*(?=[ \t]*\()/g,
      'sh_function',
      -1
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ]
  ],
  [
    [
      /"/g,
      'sh_string',
      -2
    ],
    [
      /\\./g,
      'sh_specialchar',
      -1
    ]
  ],
  [
    [
      /'/g,
      'sh_string',
      -2
    ],
    [
      /\\./g,
      'sh_specialchar',
      -1
    ]
  ]
];
