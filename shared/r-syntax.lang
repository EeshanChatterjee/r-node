# Copyright 2010 Jamie Love. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
# 
#    1. Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
# 
#    2. Redistributions in binary form must reproduce the above copyright notice, this list
#       of conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY JAMIE LOVE ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JAMIE LOVE OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# The views and conclusions contained in the software and documentation are those of the
# authors and should not be interpreted as representing official policies, either expressed
# or implied, of Jamie Love.

# definitions for R

# include "script_comment.lang"
comment start "#" 

# Dunno what this is for
(keyword,normal,classname) = 
  `(\<struct)([[:blank:]]+)([[:alnum:]_]+)`

# include "number.lang"
number = 
'\<[+-]?((0x[[:xdigit:]]+)|(([[:digit:]]*\.)?
[[:digit:]]+([eE][+-]?[[:digit:]]+)?))u?((int(?:8|16|32|64))|L)?\>'


# include c_string.lang
vardef SPECIALCHAR = '\\.'

environment string delim "\"" "\"" begin
  specialchar = $SPECIALCHAR
end

environment string delim "'" "'" begin
  specialchar = $SPECIALCHAR
end

# 
keyword = "NA|NULL|NaN|Inf|-Inf|TRUE|FALSE",
  "for|in|while|if|else",
  "object.size",
  "as.numeric",
  "ls|rm|options|q(|c(|seq|rep|append|unlist|rev|unique|sum",
  "mean|max|min|range|diff|cumsum|cumprod|identical",
  "all.equal|match|is.null|is.na|is.infinite|is.nan",
  "any|all|as.character|as.logical|as.numeric|as.integer",
  "as.Date|floor|ceiling|round|signif|attributes",
  "attr|names|rownames|colnames|dimnames|summary",
  "length|dim|nrow|ncol|head|tail|class|str",
  "subset|getwd|setwd",
  "library|search",
  "hist|plot"


# include "symbols.lang"
symbol = "~","!","%","^","*","(",")","-","+","=","[",
        "]","\\",":",";",",",".","/","?","&","<",">","\|",
        "%%","%/%","%in%","<-"


cbracket = "{|}"

# include "function.lang"
vardef FUNCTION = '([[:alpha:]]|_)[[:word:]]*(?=[[:blank:]]*\()'
function = $FUNCTION


